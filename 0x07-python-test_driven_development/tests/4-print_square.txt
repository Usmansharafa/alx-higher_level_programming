How to use 4-print_square.py
============================

This module defines a function ``print_square(size)``that prints square of size ``size`` using ``#`` character.

Usage
=====

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(3)
    ###
    ###
    ###

::

    >>> print_square(0)
    <BLANKLINE>

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

::

    >>> print_square(4.8)
    ####
    ####
    ####
    ####

Exceptions
==========
``print_square(size)`` expects one argument which is either an integer or float.
If ``size`` is not an integer or float, a TypeError is raised.
If ``size`` is less than zero, a ValueError is raised.
If ``size`` is a float and is less than zero, a TypeError is raised

::

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(-10)
    Traceback (most recent call last):
    ValueError: size must be >= 0

::

    >>> print_square(-3.5)
    Traceback (most recent call last):
    TypeError: size must be an integer
