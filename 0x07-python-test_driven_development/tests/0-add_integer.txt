How to use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)`` returns the addition of its two arguments.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3

::

    >>> add_integer(5, -20)
    -15

Floating points arguments

::

    >>> add_integer(1.0, 2.0)
    3

::

    >>> add_integer(1.9, 1.2)
    2

::

    >>> add_integer(-5.7, -2.3)
    -7

Floating point and integer arguments

::

    >>> add_integer(3.5, 8)
    11

Optional second argument - default value is 98

::

    >>> add_integer(3)
    101

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised.

::

    >>> add_integer("world", 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(6, "world")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
